#!/usr/local/bin/batyr

####
#Top level task to generate partition id -> partition offset
#Id Type Sinks Key Interpreter Task
r   L    -     -   sh;-c  inline:<<EOF
    batyr ${XBRED_SELF} -k 0 &&
    batyr ${XBRED_SELF} -k 1 &&
    batyr ${XBRED_SELF} -k 2
EOF
####
#Give a partition id to each item
0   M    -     -   sh;-c  inline:<<EOF
    nl -w 1 -s " " -b a| xargs -d "\n" -n 1 printf "${BRED_PART_ID} %s\n"| 
    TO=/seqnum/data eval "$(echo -n $BREDFS_WRITE | base64 -d)"
EOF
####
#Count number of items in each partition.
1   M    2     1   awk    inline:<<EOF
    FROM=/seqnum/data WHERE='grep -E "^$BRED_PART_ID "' eval '$(echo -n $BREDFS_READ)' |
    wc -l |
    xargs -n 1 -d "\n" printf "$BRED_PART_ID %s\n" |
    TO="/seqnum/data_num" eval '$(echo -n $BREDFS_WRITE | base64 -d)'
EOF
####
#Calculate each partition's offset
2   L    3     -   awk    inline:<<EOF
    BEGIN { 
        i=0;
    } 
    { 
        print $1,i+$2; 
    }
EOF
3   L    -     -   sh;-c  inline:TO="/seqnum/data_offset" eval '$(echo -n $BREDFS_WRITE | base64 -d)'
4   M    0     1   awk    inline:<<EOF
    BEGIN {
        #read offset from a file here; offset=0;
        "SELECT='cut -f 2 -d :' FROM='/seqnum/data_offset' WHERE='grep -E "^$BRED_PART_ID "' $(echo -n $BREDFS_READ)" | getline offset
    }
    {
        l=offset+$2;
        $1=$2="";
        print l,$0;
    }
EOF
